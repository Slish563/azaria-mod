package sunset.content; 

import arc.graphics.*;
import arc.graphics.g2d.*;
import arc.math.*;
import arc.struct.*;
import mindustry.ai.types.*;
import mindustry.annotations.Annotations.*;
import mindustry.ctype.*;
import mindustry.entities.*;
import mindustry.entities.abilities.*;
import mindustry.entities.bullet.*;
import mindustry.entities.effect.*;
import mindustry.gen.*;
import mindustry.graphics.*;
import mindustry.type.*;
import mindustry.type.weapons.*;
import mindustry.world.meta.*;

import static arc.graphics.g2d.Draw.*;
import static arc.graphics.g2d.Lines.*;
import static arc.math.Angles.*;
import static mindustry.Vars.*;


public class SnUnitTypes implements ContentList {
    public static ModUnitType
       //flying
       comet, satellite, planet, star, galaxy, eternity,
  
  @Override
  public void load(){
    //flying
        comet = new UnitType("comet"){{
            speed = 3.1f;
            accel = 0.08f;
            drag = 0.01f;
            flying = true;
            health = 60f;
            engineOffset = 5.6f;
            rotateShoting = false;
            commandLimit = 0f;
            circleTarget = true;
            hitSize = 6.7f;
              }};
       }});
  }};
        
                satellite = new UnitType("sattelite"){{
                    speed = 2.86f;
                    accel = 0.08f;
                    drag = 0.015f;
                    flying = true;
                    health = 265f;
                    engineOffset = 7.3f;
                    rotateShoting = true;
                    commandLimit = 14f;
                    circleTarget = true;
                    hitSize = 8.79f;               
                    
                  weapons.add(new Weapon("staelitte-wp"){{
                    mirror = false;
                    shootY = 3.4f;
                    reload = 72f;
                    rotate = false;
                    shootSound = Sounds.lasershoot;
                    
                    
                    bulet = new MissileBulletType{{
                      lifetime = 35f;
                      damage = 9f;
                      ArmorAdd = 10f;
                      ArmorAddLimit = 105f;
                      speed = 4.25f;
                      // trailColor = Pal.BuffYelow;
                      trailWidth = 2.26f;
                      trailLength = 16f;
                      trailChance = -2f
                    }};
           }});
    }},




                  planet = new UnitTtpe("Planet"){{
                  health = 590f;
                  speed = 1.59f;
                  accel = 0.4f;
                  drag = 0.16f;
                  range = 140f;
                  hitSize = 18.9f;
                  lowAltitude = true
                  rotateSpeed = 2f;
                  armor = 5f;
                  
                  engineOffset = 12f;
                  engineSize = 3f;
                  
                  weapons.add(new Weapon(){{
                  x = y = 0f;
                  mirror = false;
                  reload = 55f;
                  minShootVelocity = 0.01f
                  
                  // soundPitchMin = 1f;
                  // shootSound = Sounds.plasmadropSmall;
                  
                  bullet = new BasicBulletType(){{
                  sprite = "large-bomb";
                  hieght = 40f;
                  width = 28f;
                  maxRange = 21.7f;
                  ignoreRotation = true;
                  
                  // backColor = pal.buff;
                  frontColor = Color.white;
                  mixColorTo = Color.white;
                  
                  hitSound = Sounds.plasmaboom;
                  
                  shootCone = 144f;
                  ejectEffect = Fx.none;
                  hitShake = 1.9f;
                  
                  colidersAir = false;
                  
                  lifetime = 66f;
                  
                  despawnEffect = Fx.yelowBomb;
                  // hitEffect = Fx.YLmassiveExplosion;
                  keepVelocity = false;
                  spin = 2.5f;
                  
                  shrinkX = shrinkY = 0.55f;
                  
                  speed = 0f;
                  colliders = false;
                  
                  
                  // regenDuration = 360f;
                  // regenPercentInSec = 4f;
                  
                  splashDamage = 25f;
                  splashDamageRadius = 66f;
                  
